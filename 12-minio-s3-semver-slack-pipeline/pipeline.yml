resources:
  - name: git-repo
    type: git
    source:
      uri: git@github.com:ruanbekker/concourse-swarm-app-demo.git
      branch: master
      private_key: ((github_private_key))
      paths:
        - README.md

  - name: minio-s3
    type: s3
    source:
      regexp: example-file-(.*).txt
      endpoint: ((minio_endpoint)) # remove if using aws s3
      bucket: concourse
      access_key_id: ((minio_access_key))
      secret_access_key: ((minio_secret_key))
      disable_ssl: false

  - name: slack-alert
    type: slack-notification
    source:
      url: ((slack_notification_url))

  - name: version-readme
    type: semver
    source:
      driver: git
      uri: git@github.com:ruanbekker/concourse-swarm-app-demo.git
      private_key: ((github_private_key))
      file: version-readme
      branch: version-readme

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: v1.3.0

jobs:
  - name: bump-readme-version
    plan:
    - get: git-repo
      trigger: true
    - get: version-readme
    - put: version-readme
      params:
        bump: major

  - name: minio-write
    plan:
    - get: git-repo
    - get: version-readme
      passed:
      - bump-readme-version
      trigger: true
    - task: write-version-to-minio
      params:
        MINIO_PATH: concourse/example-file-1.txt
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
            tag: latest
        inputs:
        - name: version-readme
        run:
          path: /bin/sh
          args:
            - -c
            - |
              version=$(cat version-readme/version)
              echo "Version: ${version} published, created on $(date)" > file-to-upload/example-file-1.txt
        outputs:
        - name: file-to-upload
    - put: minio-s3
      params:
        file: file-to-upload/example-file-*
      on_success:
        put: slack-alert
        params:
          channel: '#system_events'
          username: 'concourse'
          icon_emoji: ':concourse:'
          silent: true
          text: |
            *$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME* ($BUILD_NAME) SUCCESS :aww_yeah: - object pushed to $MINIO_PATH
            http://ci.example.local/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

  - name: minio-read
    plan:
    - get: minio-s3
      passed:
      - minio-write
      trigger: true
    - task: read-object-from-minio
      params:
        MINIO_PATH: concourse/example-file-1.txt
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
            tag: latest
        inputs:
        - name: minio-s3
        run:
          path: /bin/sh
          args:
            - -c
            - |
              cat minio-s3/example-file-*
      on_success:
        put: slack-alert
        params:
          channel: '#system_events'
          username: 'concourse'
          icon_emoji: ':concourse:'
          silent: true
          text: |
            *$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME* ($BUILD_NAME) SUCCESS :aww_yeah: - object has been read from $MINIO_PATH
            http://ci.example.local/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
